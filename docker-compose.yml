version: '3.8'

services:
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: symptom-mcp-server
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - FERNET_KEY=${FERNET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=1440
      - GEMINI_MODEL=gemini-2.0-flash-exp
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_PORT=8001
    networks:
      - symptom-network
    restart: unless-stopped

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: symptom-fastapi
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - FERNET_KEY=${FERNET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=1440
      - GEMINI_MODEL=gemini-2.0-flash-exp
      - MCP_SERVER_HOST=mcp-server
      - MCP_SERVER_PORT=8001
      - ENV=production
    depends_on:
      - mcp-server
    networks:
      - symptom-network
    restart: unless-stopped
    volumes:
      - uploads:/app/mcp_langgraph_app/uploads

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: symptom-streamlit
    ports:
      - "8501:8501"
    environment:
      - API_BASE=http://fastapi:8000
    depends_on:
      - fastapi
    networks:
      - symptom-network
    restart: unless-stopped

networks:
  symptom-network:
    driver: bridge

volumes:
  uploads:
